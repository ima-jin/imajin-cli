{
    "openapi": "3.0.0",
    "info": {
        "title": "Simple API",
        "version": "1.0.0",
        "description": "A simple API for demonstration purposes"
    },
    "servers": [
        {
            "url": "https://api.simple.com/v1",
            "description": "Production server"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "summary": "List all users",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of users to return",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 20
                        },
                        "required": false
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of users to skip",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "offset": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get a user by ID",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "summary": "Update a user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "summary": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "summary": "List all posts",
                "operationId": "listPosts",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Filter posts by user ID",
                        "schema": {
                            "type": "string"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "required": [
                    "id",
                    "username",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique user identifier"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username",
                        "minLength": 3,
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User email address"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the user was created"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Whether the user account is active",
                        "default": true
                    }
                }
            },
            "CreateUserRequest": {
                "type": "object",
                "required": [
                    "username",
                    "email",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30,
                        "description": "Desired username"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User email address"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "description": "User password"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name"
                    }
                }
            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 30,
                        "description": "Username"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User email address"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Whether the user account is active"
                    }
                }
            },
            "Post": {
                "type": "object",
                "required": [
                    "id",
                    "title",
                    "content",
                    "userId"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique post identifier"
                    },
                    "title": {
                        "type": "string",
                        "description": "Post title"
                    },
                    "content": {
                        "type": "string",
                        "description": "Post content"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user who created the post"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the post was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the post was last updated"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "apiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}